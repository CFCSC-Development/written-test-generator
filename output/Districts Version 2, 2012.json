[
    {
        "questionDescription": "What is the sum of D0A16 and 23816?",
        "answers": [
            "A: F4216",
            "B: AD216",
            "C: E4816",
            "D: F4816",
            "E: E5616"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "A",
        "questionNumber": 1,
        "tags": []
    },
    {
        "questionDescription": "int x = 4; \nint y = x + 3 * (4 + x); \nSystem.out.print(y); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 4",
            "B: 28",
            "C: 56",
            "D: 77",
            "E: 84"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 2,
        "tags": []
    },
    {
        "questionDescription": "int val = 0; \nfor(int i = 10; i > 1; i--) \n  val += 3; \nSystem.out.print(val); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 0",
            "B: 9",
            "C: 10",
            "D: 24",
            "E: 27"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "E",
        "questionNumber": 3,
        "tags": []
    },
    {
        "questionDescription": "String c1 = \"AABABBAAABBBAAABB\"; \nint res = c1.indexOf(\"AAA\", 8); \nSystem.out.print(res); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 13",
            "B: 12",
            "C: 7",
            "D: 6",
            "E: -1"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 4,
        "tags": []
    },
    {
        "questionDescription": "String[] st = {\"AB\", \"A\", \"DAD\", \"12\"}; \nSystem.out.print(st[3].length()); \nSystem.out.print(\" \" + st[1].length()); \n \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 1 2",
            "B: 3 2",
            "C: 65 12",
            "D: 2 1",
            "E: 2 3"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 5,
        "tags": []
    },
    {
        "questionDescription": "int x1 = 13; \nint y1 = 19; \nint z1 = 2 * x1 - y1 + 2 * y1 - x1; \nSystem.out.print(z1); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 158",
            "B: 96",
            "C: 64",
            "D: 32",
            "E: 19"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 6,
        "tags": []
    },
    {
        "questionDescription": "boolean p, q, r; \n//code to initialize p, q, and r \n \nboolean s = (p || q) && (!r && !q); \n \nHow many combinations of values for the boolean \nvariables p, q, and r will result in s being set to \ntrue?",
        "answers": [
            "A: 1",
            "B: 2",
            "C: 3",
            "D: 4",
            "E: 7"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "A",
        "questionNumber": 7,
        "tags": []
    },
    {
        "questionDescription": "double a3 = 7.7; \nif(a3 / 2 > 3) \n  System.out.print(1); \nelse \n  System.out.print(4); \nSystem.out.print(a3); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 43.85",
            "B: 13.85",
            "C: 47.7",
            "D: 17.7",
            "E: There is no output due to a syntax error."
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 8,
        "tags": []
    },
    {
        "questionDescription": "public class Student { \n  private int credits; \n \n  public Student(int c) {credits = c;} \n \n  public void goodYear() {credits += 6;} \n \n  public String toString() { \n    return \"credits: \" + credits; \n  } \n \n  public void setCredits(int c) { \n    credits = c; \n  }  \n} \n \npublic class Block extends Student { \n  private int ccs; \n   \n  public Block (int c, int ex) { \n    super(c); \n    ccs = ex; \n  } \n \n  public void goodYear() { \n    setCredits(ccs + 8); \n  } \n}  \n \nGiven the Student and Block classes to the right, \nwhat is output by the following client code? \nStudent st1 = new Student(10); \nst1.goodYear(); \nSystem.out.print(st1);",
        "answers": [
            "A: credits: 6",
            "B: 10",
            "C: credits: 16",
            "D: 6",
            "E: credits: credits"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "C",
        "questionNumber": 9,
        "tags": []
    },
    {
        "questionDescription": "Given the Student and Block classes to the right, \nwhat is output by the following client code? \nStudent st2 = new Block(10, 4); \nst2.goodYear(); \nSystem.out.print(st2); \n \n \n \n \ncode.",
        "answers": [
            "A: credits: 16",
            "B: credits: 14",
            "C: credits: 10",
            "D: credits: 12",
            "E: There is no output due to a syntax error in the client"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 10,
        "tags": []
    },
    {
        "questionDescription": "int m = 127; \nint n = 62; \nSystem.out.print(m & n); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 189",
            "B: 127",
            "C: 62",
            "D: 31",
            "E: 0"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "C",
        "questionNumber": 11,
        "tags": []
    },
    {
        "questionDescription": "double m2 = 3.15; \ndouble n2 = m2 / 2; \ndouble o2 = Math.floor(n2) + Math.ceil(m2); \nSystem.out.print(o2); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 6.0",
            "B: 5.0",
            "C: 4.825",
            "D: 4.0",
            "E: 3.15"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 12,
        "tags": []
    },
    {
        "questionDescription": "System.out.print(\"big\"); \nSystem.out.println(); \nSystem.out.print(\"tall\\nthin\"); \n \nWhat is output by the code to the right? \n \n \ntall\\nthin \n\ntallnthin \n \ntall \nthin",
        "answers": [
            "A: bigtallthin",
            "B: bigtall\\nthin",
            "C: big",
            "D: big",
            "E: big"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "E",
        "questionNumber": 13,
        "tags": []
    },
    {
        "questionDescription": "double t5 = 671.45; \nSystem.out.printf(\"%+6.1f\", t5); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 671.5",
            "B: +671.4",
            "C: 671.4",
            "D: (671.0)",
            "E: +671.5"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "E",
        "questionNumber": 14,
        "tags": []
    },
    {
        "questionDescription": "public double calc(int x, double a) { \n  x--; \n  a -= 2 * x; \n  return a * x; \n} \n \nWhat is returned by the method call calc(-2, -1.5)?",
        "answers": [
            "A: -31.5",
            "B: -21.0",
            "C: -15.0",
            "D: -13.5",
            "E: 3.5"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 15,
        "tags": []
    },
    {
        "questionDescription": "String stars = \"\"; \nfor(int i = 0; i < 5; i++) \n    stars += \"*\"; \nstars += \"*\"; \nfor(int i = 0; i < 10; i++) \n    stars += \"*\"; \nSystem.out.print(stars.length()); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 16",
            "B: 15",
            "C: 11",
            "D: 10",
            "E: 0"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "A",
        "questionNumber": 16,
        "tags": []
    },
    {
        "questionDescription": "double[] as = {0.5, -1.78, 2.21, 4.5000}; \nSystem.out.print( (int) as[3] ); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 2",
            "B: 2.0",
            "C: 4.0",
            "D: 4",
            "E: 5.0"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 17,
        "tags": []
    },
    {
        "questionDescription": "int r = 0; \nr += Math.pow(2, 5); \nSystem.out.print(r); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 0",
            "B: 25",
            "C: 25.0",
            "D: 32",
            "E: 32.0"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 18,
        "tags": []
    },
    {
        "questionDescription": "Which of the following Java statements is equivalent to the formula to the \nright? BMI, ma, and in are variables of type double.",
        "answers": [
            "A: BMI = 703 * ma / (in * in);",
            "B: BMI = 703 * m * a / in / 2;",
            "C: BMI = 703.0 * ma / (in ^ 2);",
            "D: BMI = 703.0 * ma / in * 2;",
            "E: BMI = 703 * m * a >> in >> in;"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "A",
        "questionNumber": 19,
        "tags": []
    },
    {
        "questionDescription": "double mys = 0.0; \ndouble t = 0; \ndo { \n  t = Math.random(); \n  mys++; \n} while(t < 0.2); \nSystem.out.print(mys); \n \nWhat is the minimum value the code to the right will print \nout? \n \n \ncorrect.",
        "answers": [
            "A: 0.0",
            "B: 1.0",
            "C: 2.0",
            "D: 3.0",
            "E: None of A through D are"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 20,
        "tags": []
    },
    {
        "questionDescription": "Object obj1 = new ArrayList<String>(); \nObject obj2 = obj1.toString(); \nSystem.out.print(obj1 == obj2); \nSystem.out.print(\" \" + obj1.equals(obj2)); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: true true",
            "B: false true",
            "C: false false",
            "D: There is no output due to a syntax error.",
            "E: There is no output due to a runtime error."
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "C",
        "questionNumber": 21,
        "tags": []
    },
    {
        "questionDescription": "public void sort(String[] w) { \n  for(int i = 0; i < w.length - 1; i++) { \n    int m = i; \n    for(int j = i + 1; j < w.length; j++) \n      if( <*1> ) \n        m = j; \n    if(m != i) { \n      String t = w[i]; \n      w[i] = w[m]; \n      w[m] = t; \n    } \n    if(i == 4) \n      System.out.print(Arrays.toString(w)); \n  } \n} \n \n// client code \nString[] ds = {\"Z\", \"a\", \"MY\", \"Z\", \"b\",  \n\"p\", \"BE\"}; \nsort(ds); \n \nWhich of the following boolean expressions replaces \n<*1> in method sort so that the body of the if \nstatement is executed if the String at index m is \ngreater than the String at index j? \n \n \n \n \n \nAssume <*1> is filled in correctly.",
        "answers": [
            "A: w[m].compareTo(w[j]) > 0",
            "B: w[m] > w[j]",
            "C: w[m] < w[j]",
            "D: w[m].compareTo(w[j]) < 0",
            "E: Comparable.compareTo(w[m], w[j]) > 0"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "A",
        "questionNumber": 22,
        "tags": []
    },
    {
        "questionDescription": "What is output when the client code to the right is executed?",
        "answers": [
            "A: [Z, a, MY, Z, b, p, BE]",
            "B: [BE, MY, Z, Z, a, b, p]",
            "C: [BE, MY, Z, Z, a, p, b]",
            "D: [Z, Z, BE, MY, b, p, a]",
            "E: [BE, MY, Z, Z, b, p, a]"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "C",
        "questionNumber": 23,
        "tags": []
    },
    {
        "questionDescription": "Which sorting algorithm does method sort implement? \n \nsort \n\nsort",
        "answers": [
            "A: insertion",
            "B: selection",
            "C: radix sort",
            "D: quicksort",
            "E: heap sort"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 24,
        "tags": []
    },
    {
        "questionDescription": "Which of the following is a valid Java identifier?",
        "answers": [
            "A: +12",
            "B: 5x",
            "C: (val)",
            "D: x_y12",
            "E: More than one of A through D is correct."
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 25,
        "tags": []
    },
    {
        "questionDescription": "public ArrayList<Integer> search( \nString[] m, String t) { \n  ArrayList<Integer> r; \n  r = new ArrayList<Integer>(); \n  for(int i = 0; i < m.length; i++)  \n    if(<*1>)  \n      r.add(i);   \n  return r; \n} \n \n// client code \nString[] n = {\"A\", \"N\", \"A\", \"J\", \"A\",  \n\"M\", \"AA\", \"AAA\", \"A\"}; \nString sch = n[6].substring(1); \nSystem.out.print(search(n, sch)); \n \nWhat replaces <*1> in the method search to the right \nso that the output of the client code to the right is  \n[0, 2, 4, 8]? \n \n \n \nAssume <*1> is filled in correctly.",
        "answers": [
            "A: m[i] = t",
            "B: m[i].equals(t)",
            "C: m[i] == t",
            "D: m[i].compareTo(t)",
            "E: More than one of A through D is correct."
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 26,
        "tags": []
    },
    {
        "questionDescription": "Which searching algorithm does method search \nimplement?",
        "answers": [
            "A: binary",
            "B: heap",
            "C: radix",
            "D: sequential",
            "E: insertion"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 27,
        "tags": []
    },
    {
        "questionDescription": "<*1> list = new LinkedList<Integer>(); \nSystem.out.print(list.toString()); \nSystem.out.print(list.size()); \n \nWhich of the following can replace <*1> in the code to \nthe right so that the code segment compiles without error? \nI. \nII. \nIII. \nCollection<Integer> \nList<Integer> \nObject \n \n \nonly",
        "answers": [
            "A: I only",
            "B: II only",
            "C: III only",
            "D: I and II",
            "E: I, II, and III"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 28,
        "tags": []
    },
    {
        "questionDescription": "public int mystery(int x) { \n  int num = 0; \n  for(int i = 1; i <= x; i++)  \n    if( x <*1> i == 0 ) \n      num++; \n  return num; \n} \n \n// client code \nSystem.out.print(mystery(13)); \nSystem.out.print(\" \" + mystery(72)); \n \nWhat replaces <*1> in method mystery to the right to \nobtain the remainder of the integer division of x by i? \n \n \nAssume <*1> is filled in correctly.",
        "answers": [
            "A: rem",
            "B: ~",
            "C: !",
            "D: /",
            "E: %"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "E",
        "questionNumber": 29,
        "tags": []
    },
    {
        "questionDescription": "What is output by the client code to the right?",
        "answers": [
            "A: 2 12",
            "B: 13 72",
            "C: 1 11",
            "D: 1 7",
            "E: 0 10"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "A",
        "questionNumber": 30,
        "tags": []
    },
    {
        "questionDescription": "byte b1 = 12; \nbyte b2 = (byte) ~b1; \nString bits = Integer.toBinaryString(b2); \nbits = bits.substring(bits.length() - 8); \nSystem.out.print(bits); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 10001100",
            "B: 01110011",
            "C: 00000000",
            "D: 11110011",
            "E: 11111111"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 31,
        "tags": []
    },
    {
        "questionDescription": "public int find(Map<String, Integer> m,  \nString[] can) { \n  int res = 0; \n  for(String k : can) \n    if(m.containsKey(k)) \n      res++; \n  return res; \n} \n \nWhat is the average case order (Big O) of method find \nshown to the right, given the following kinds of Maps? \nm.size() = N and  can.length = M. Pick the most \nrestrictive correct set of answers. \n TreeMap       HashMap \n \n \n \n2\n) O(N) \n \nN\n) O(M)",
        "answers": [
            "A: O(NM) O(NM)",
            "B: O(NlogM) O(NM)",
            "C: O(MN",
            "D: O(M",
            "E: O(MlogN) O(M)"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "E",
        "questionNumber": 32,
        "tags": []
    },
    {
        "questionDescription": "String gar = \"56+=78-412**32^\"; \nString[] rs = gar.split(\"\\\\D\"); \nSystem.out.print(rs.length + \" \" + rs[0]); \n \nWhat is output by the code to the right?",
        "answers": [
            "A: 4 56",
            "B: 11 5",
            "C: 9 5",
            "D: 13",
            "E: 6 56"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "E",
        "questionNumber": 33,
        "tags": []
    },
    {
        "questionDescription": "The following values are inserted in the order shown into a binary search tree using the traditional, naive insertion algorithm. \nWhat is the result of post order traversal of the resulting tree? \n11, 3, 7, 8, 3, 6, 9, 11, 12",
        "answers": [
            "A: 12 11 9 8 7 6 3",
            "B: 3 6 7 8 9 11 12",
            "C: 11 3 7 6 8 9 11 12",
            "D: 6 9 8 7 3 12 11",
            "E: 11 3 7 6 8 9 12"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 34,
        "tags": []
    },
    {
        "questionDescription": "What kind of graph does the picture to the right represent?",
        "answers": [
            "A: a directed unweighted graph",
            "B: a directed weighted graph",
            "C: an undirected unweighted graph",
            "D: a undirected weighted graph",
            "E: a binary search tree"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 35,
        "tags": []
    },
    {
        "questionDescription": "String[] gds = {\"A\", \"\", null, \"C\", \"D\"}; \nSystem.out.print(gds instanceof Object); \nSystem.out.print(gds[2] instanceof Object); \nSystem.out.print(gds[1] instanceof String); \n \nWhat is output by the code to the right? \n \n \n \n \n \n \nUT AM \nTS \nBU \n15 \n22 \n17 \n37 \n2",
        "answers": [
            "A: truetruetrue",
            "B: falsefalsetrue",
            "C: falsefalsefalse",
            "D: truefalsetrue",
            "E: There is no output due to a runtime error."
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 36,
        "tags": []
    },
    {
        "questionDescription": "public int[] process(int max) { \n  int[] cs = {1, 3, 5}; \n  int[] ms = new int[max]; \n  Arrays.fill(ms, max * 10); \n  ms[0] = 0; \n  for(int i = 1; i < ms.length; i++) \n    for(int j = 0; j < cs.length; j++) \n      if(cs[j] <= i) { \n        int t = ms[i - cs[j]] + 1; \n        if(t < ms[i]) \n          ms[i] = t; \n      } \n  return ms; \n} \n \nGiven method process to the right, what is output by \nthe following client code? \nint[] p1 = process(9); \nSystem.out.print(p1[4]);",
        "answers": [
            "A: 90",
            "B: 9",
            "C: 3",
            "D: 2",
            "E: 1"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "D",
        "questionNumber": 37,
        "tags": []
    },
    {
        "questionDescription": "Given method process to the right, what is output by \nthe following client code? \nint[] p2 = process(15); \nint tot = 0; \nfor(int i : p2) \n  tot += i; \nSystem.out.print(tot);",
        "answers": [
            "A: 105",
            "B: 36",
            "C: 33",
            "D: 27",
            "E: 14"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "C",
        "questionNumber": 38,
        "tags": []
    },
    {
        "questionDescription": "public class Structure<E> { \n  private ArrayList<E> con; \n \n  public Structure() { \n    con = new ArrayList<E>(10); \n  } \n \n  public void add(E v) { con.add(v); } \n \n  public E remove() {  \n    return con.remove(0); \n  } \n \n  public E peek() { return con.get(0); } \n \n  public boolean isEmpty() { \n    return con.size() == 0; \n  } \n} \n \n// client code \nStructure<Integer> str; \nstr = new Structure<Integer>(); \nfor(int i = 3; i < 20; i += i) \n  str.add(i); \nwhile(!str.isEmpty())  \n  System.out.print(str.remove()); \n \nWhat is output by the client code to the right?",
        "answers": [
            "A: 36912151821",
            "B: 3612",
            "C: 369121518",
            "D: 181512963",
            "E: 36120000000"
        ],
        "testSource": "Districts Version 2, 2012",
        "correctAnswer": "B",
        "questionNumber": 39,
        "tags": []
    }
]